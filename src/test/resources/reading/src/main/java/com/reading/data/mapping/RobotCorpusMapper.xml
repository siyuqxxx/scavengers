<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.reading.data.dao.RobotCorpusMapper">
    <resultMap id="BaseResultMap" type="com.reading.data.model.RobotCorpus">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="libraryId" property="libraryid" jdbcType="BIGINT"/>
        <result column="question" property="question" jdbcType="VARCHAR"/>
        <result column="tuling_id" property="tulingId" jdbcType="VARCHAR"/>
        <result column="answer" property="answer" jdbcType="VARCHAR"/>
        <result column="question1" property="question1" jdbcType="VARCHAR"/>
        <result column="question2" property="question2" jdbcType="VARCHAR"/>
        <result column="question3" property="question3" jdbcType="VARCHAR"/>
        <result column="question4" property="question4" jdbcType="VARCHAR"/>
        <result column="question5" property="question5" jdbcType="VARCHAR"/>
        <result column="corpus_status" property="corpusStatus" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, libraryId, question, tuling_id, answer, question1, question2, question3, question4, 
    question5, corpus_status, create_time, update_time
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.reading.data.model.RobotCorpusExample">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from robot_corpus
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart>=0">
            limit #{limitStart} , #{limitEnd}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from robot_corpus
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from robot_corpus
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.reading.data.model.RobotCorpusExample">
        delete from robot_corpus
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.reading.data.model.RobotCorpus">
    insert into robot_corpus (id, libraryId, question, 
      tuling_id, answer, question1, 
      question2, question3, question4, 
      question5, corpus_status, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{libraryid,jdbcType=BIGINT}, #{question,jdbcType=VARCHAR}, 
      #{tulingId,jdbcType=VARCHAR}, #{answer,jdbcType=VARCHAR}, #{question1,jdbcType=VARCHAR}, 
      #{question2,jdbcType=VARCHAR}, #{question3,jdbcType=VARCHAR}, #{question4,jdbcType=VARCHAR}, 
      #{question5,jdbcType=VARCHAR}, #{corpusStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.reading.data.model.RobotCorpus" useGeneratedKeys="true"
            keyProperty="id">
        insert into robot_corpus
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="libraryid != null">
                libraryId,
            </if>
            <if test="question != null">
                question,
            </if>
            <if test="tulingId != null">
                tuling_id,
            </if>
            <if test="answer != null">
                answer,
            </if>
            <if test="question1 != null">
                question1,
            </if>
            <if test="question2 != null">
                question2,
            </if>
            <if test="question3 != null">
                question3,
            </if>
            <if test="question4 != null">
                question4,
            </if>
            <if test="question5 != null">
                question5,
            </if>
            <if test="corpusStatus != null">
                corpus_status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="libraryid != null">
                #{libraryid,jdbcType=BIGINT},
            </if>
            <if test="question != null">
                #{question,jdbcType=VARCHAR},
            </if>
            <if test="tulingId != null">
                #{tulingId,jdbcType=VARCHAR},
            </if>
            <if test="answer != null">
                #{answer,jdbcType=VARCHAR},
            </if>
            <if test="question1 != null">
                #{question1,jdbcType=VARCHAR},
            </if>
            <if test="question2 != null">
                #{question2,jdbcType=VARCHAR},
            </if>
            <if test="question3 != null">
                #{question3,jdbcType=VARCHAR},
            </if>
            <if test="question4 != null">
                #{question4,jdbcType=VARCHAR},
            </if>
            <if test="question5 != null">
                #{question5,jdbcType=VARCHAR},
            </if>
            <if test="corpusStatus != null">
                #{corpusStatus,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.reading.data.model.RobotCorpusExample"
            resultType="java.lang.Integer">
        select count(*) from robot_corpus
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update robot_corpus
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.libraryid != null">
                libraryId = #{record.libraryid,jdbcType=BIGINT},
            </if>
            <if test="record.question != null">
                question = #{record.question,jdbcType=VARCHAR},
            </if>
            <if test="record.tulingId != null">
                tuling_id = #{record.tulingId,jdbcType=VARCHAR},
            </if>
            <if test="record.answer != null">
                answer = #{record.answer,jdbcType=VARCHAR},
            </if>
            <if test="record.question1 != null">
                question1 = #{record.question1,jdbcType=VARCHAR},
            </if>
            <if test="record.question2 != null">
                question2 = #{record.question2,jdbcType=VARCHAR},
            </if>
            <if test="record.question3 != null">
                question3 = #{record.question3,jdbcType=VARCHAR},
            </if>
            <if test="record.question4 != null">
                question4 = #{record.question4,jdbcType=VARCHAR},
            </if>
            <if test="record.question5 != null">
                question5 = #{record.question5,jdbcType=VARCHAR},
            </if>
            <if test="record.corpusStatus != null">
                corpus_status = #{record.corpusStatus,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update robot_corpus
        set id = #{record.id,jdbcType=BIGINT},
        libraryId = #{record.libraryid,jdbcType=BIGINT},
        question = #{record.question,jdbcType=VARCHAR},
        tuling_id = #{record.tulingId,jdbcType=VARCHAR},
        answer = #{record.answer,jdbcType=VARCHAR},
        question1 = #{record.question1,jdbcType=VARCHAR},
        question2 = #{record.question2,jdbcType=VARCHAR},
        question3 = #{record.question3,jdbcType=VARCHAR},
        question4 = #{record.question4,jdbcType=VARCHAR},
        question5 = #{record.question5,jdbcType=VARCHAR},
        corpus_status = #{record.corpusStatus,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.reading.data.model.RobotCorpus">
        update robot_corpus
        <set>
            <if test="libraryid != null">
                libraryId = #{libraryid,jdbcType=BIGINT},
            </if>
            <if test="question != null">
                question = #{question,jdbcType=VARCHAR},
            </if>
            <if test="tulingId != null">
                tuling_id = #{tulingId,jdbcType=VARCHAR},
            </if>
            <if test="answer != null">
                answer = #{answer,jdbcType=VARCHAR},
            </if>
            <if test="question1 != null">
                question1 = #{question1,jdbcType=VARCHAR},
            </if>
            <if test="question2 != null">
                question2 = #{question2,jdbcType=VARCHAR},
            </if>
            <if test="question3 != null">
                question3 = #{question3,jdbcType=VARCHAR},
            </if>
            <if test="question4 != null">
                question4 = #{question4,jdbcType=VARCHAR},
            </if>
            <if test="question5 != null">
                question5 = #{question5,jdbcType=VARCHAR},
            </if>
            <if test="corpusStatus != null">
                corpus_status = #{corpusStatus,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.reading.data.model.RobotCorpus">
    update robot_corpus
    set libraryId = #{libraryid,jdbcType=BIGINT},
      question = #{question,jdbcType=VARCHAR},
      tuling_id = #{tulingId,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      question1 = #{question1,jdbcType=VARCHAR},
      question2 = #{question2,jdbcType=VARCHAR},
      question3 = #{question3,jdbcType=VARCHAR},
      question4 = #{question4,jdbcType=VARCHAR},
      question5 = #{question5,jdbcType=VARCHAR},
      corpus_status = #{corpusStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>